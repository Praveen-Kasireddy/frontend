{"version":3,"sources":["webpack:///./src/app/core/enum/process-state-enum.ts","webpack:///./src/app/management/management-routing.module.ts","webpack:///./src/app/management/management.component.html","webpack:///./src/app/management/management.component.scss","webpack:///./src/app/management/management.component.ts","webpack:///./src/app/management/management.module.ts","webpack:///./src/app/management/master-data/master-data.component.html","webpack:///./src/app/management/master-data/master-data.component.scss","webpack:///./src/app/management/master-data/master-data.component.ts","webpack:///./src/app/management/userlist/add-user/add-user.component.html","webpack:///./src/app/management/userlist/add-user/add-user.component.scss","webpack:///./src/app/management/userlist/add-user/add-user.component.ts","webpack:///./src/app/management/userlist/edit-user/edit-user.component.html","webpack:///./src/app/management/userlist/edit-user/edit-user.component.scss","webpack:///./src/app/management/userlist/edit-user/edit-user.component.ts","webpack:///./src/app/management/userlist/userlist.component.html","webpack:///./src/app/management/userlist/userlist.component.scss","webpack:///./src/app/management/userlist/userlist.component.ts"],"names":[],"mappings":"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","file":"management-management-module.js","sourcesContent":["export enum ProcessStateEnum {\r\n    STARTED = ('Started' as any) as ProcessStateEnum,\r\n    FINISHED = ('Finished' as any) as ProcessStateEnum,\r\n    FINISHED_WITH_ERRRORS = ('FinishedWithErrors' as any) as ProcessStateEnum\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ManagementTab } from '@core/enum/management-tab.enum';\r\nimport { ManagementComponent } from './management.component';\r\n\r\nexport const managementRoutes: Routes = [\r\n    {\r\n        path: 'userlist',\r\n        component: ManagementComponent,\r\n        data: { selectedTab: ManagementTab.USER_MANAGEMENT }\r\n    },\r\n    {\r\n        path: 'masterdata',\r\n        component: ManagementComponent,\r\n        data: { selectedTab: ManagementTab.MASTER_DATA_MANAGEMENT }\r\n    },\r\n    {\r\n        path: '',\r\n        redirectTo: 'userlist'\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(managementRoutes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class ManagementRoutingModule {}\r\n","module.exports = \"<kosmos-header i18n-subtitle=\\\"User Management|List Title for Headerk@@user-management:userlist\\\" subtitle=\\\"KPMG Cosmos Management System\\\"></kosmos-header>\\r\\n<dx-tabs [dataSource]=\\\"tabs\\\" [selectedIndex]=\\\"selectedTab\\\" (onItemClick)=\\\"selectTab($event)\\\"></dx-tabs>\\r\\n<div [ngSwitch]=\\\"selectedTab\\\">\\r\\n    <div *ngSwitchCase=\\\"0\\\">\\r\\n        <kosmos-userlist></kosmos-userlist>\\r\\n    </div>\\r\\n    <div *ngSwitchCase=\\\"1\\\">\\r\\n        <kosmos-master-data></kosmos-master-data>\\r\\n    </div>\\r\\n    <div *ngSwitchDefault></div>\\r\\n</div>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ManagementTab } from '@core/enum/management-tab.enum';\r\n\r\n@Component({\r\n    selector: 'kosmos-management',\r\n    templateUrl: './management.component.html',\r\n    styleUrls: ['./management.component.scss']\r\n})\r\nexport class ManagementComponent implements OnInit {\r\n    tabs: { id: number; text: string; icon: string }[] = [\r\n        { id: ManagementTab.USER_MANAGEMENT, text: 'User Management', icon: '' },\r\n        { id: ManagementTab.MASTER_DATA_MANAGEMENT, text: 'Master Data Management', icon: '' }\r\n    ];\r\n    selectedTab: number = 0;\r\n\r\n    constructor(private _route: ActivatedRoute, private _router: Router) {}\r\n\r\n    ngOnInit(): void {\r\n        if (this._route.snapshot.data['selectedTab'] != undefined && this._route.snapshot.data['selectedTab'] != null) {\r\n            this.selectedTab = this._route.snapshot.data['selectedTab'];\r\n        } else {\r\n            this.selectTab({ itemIndex: ManagementTab.USER_MANAGEMENT });\r\n        }\r\n    }\r\n\r\n    selectTab(e) {\r\n        if (e.itemIndex == ManagementTab.USER_MANAGEMENT) {\r\n            this._router.navigate(['/management/userlist']);\r\n        } else if (e.itemIndex == ManagementTab.MASTER_DATA_MANAGEMENT) {\r\n            this._router.navigate(['/management/masterdata']);\r\n        }\r\n    }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ConfigurationService, ProjectService } from '@core/services';\r\nimport { MasterDataImportService } from '@core/services/master-data/master-data-import.service';\r\nimport { SharedModule } from '@shared/shared.module';\r\nimport {\r\n    DxAutocompleteModule,\r\n    DxDataGridModule,\r\n    DxPopupModule,\r\n    DxSparklineModule,\r\n    DxTabsModule,\r\n    DxTemplateModule,\r\n    DxValidationGroupModule\r\n} from 'devextreme-angular';\r\nimport { ManagementRoutingModule } from './management-routing.module';\r\nimport { ManagementComponent } from './management.component';\r\nimport { MasterDataComponent } from './master-data/master-data.component';\r\nimport { UserlistComponent } from './userlist/userlist.component';\r\nimport { AddUserComponent } from './userlist/add-user/add-user.component';\r\nimport { EditUserComponent } from './userlist/edit-user/edit-user.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        ManagementRoutingModule,\r\n        CommonModule,\r\n        SharedModule,\r\n        DxDataGridModule,\r\n        DxSparklineModule,\r\n        DxTemplateModule,\r\n        DxDataGridModule,\r\n        DxAutocompleteModule,\r\n        DxSparklineModule,\r\n        DxValidationGroupModule,\r\n        DxPopupModule,\r\n        DxTabsModule\r\n    ],\r\n    declarations: [ManagementComponent, MasterDataComponent, UserlistComponent, AddUserComponent, EditUserComponent],\r\n    providers: [ProjectService, ConfigurationService, MasterDataImportService]\r\n})\r\nexport class ManagementModule {}\r\n","module.exports = \"<h1 class=\\\"headline\\\">Master Data Management</h1>\\r\\n\\r\\n<div class=\\\"uploadGroup\\\">\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <div class=\\\"button dx-button\\\" role=\\\"button\\\"><span>Scope Item\\r\\n                Upload</span>\\r\\n            <input type=\\\"file\\\" id=\\\"file\\\" (change)=\\\"handleFileInput($event.target.files)\\\" />\\r\\n        </div>\\r\\n        <div class=\\\"button dx-button\\\" role=\\\"button\\\"><span>Industries Upload</span>\\r\\n            <input type=\\\"file\\\" id=\\\"industryFile\\\" (change)=\\\"handleIndustries($event.target.files)\\\" />\\r\\n        </div>\\r\\n        <div class=\\\"loader\\\" *ngIf=\\\"isImporting\\\">\\r\\n            <kosmos-loading-cube></kosmos-loading-cube>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<kosmos-message-box showDoneButton=\\\"true\\\" showCloseButton=\\\"true\\\"></kosmos-message-box>\"","module.exports = \".headline {\\n  margin: 40px; }\\n\\n.button {\\n  background-color: #282c37;\\n  color: #f5f7fa;\\n  height: 37px;\\n  padding: 10px;\\n  position: relative;\\n  overflow: hidden;\\n  margin: 10px; }\\n\\n.button:hover {\\n    background-color: #333846; }\\n\\n.button input#file,\\n  .button input#industryFile {\\n    position: absolute;\\n    top: 0;\\n    right: 0;\\n    margin: 0;\\n    padding: 0;\\n    opacity: 0;\\n    font-size: 20px;\\n    cursor: pointer;\\n    filter: alpha(opacity=0); }\\n\\n.loader {\\n  height: 32px;\\n  width: 32px;\\n  margin: 11px; }\\n\\n.uploadGroup {\\n  margin-left: 40px;\\n  margin-right: 40px;\\n  padding: 20px;\\n  border: 1px solid #282c37;\\n  border-radius: 5px; }\\n\\n.form-group {\\n  margin-left: 1px; }\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ProcessStateEnum } from '@core/enum/process-state-enum';\r\nimport { MasterDataImportService } from '@core/services/master-data/master-data-import.service';\r\nimport { MessageBoxComponent } from '@shared/message-box/message-box.component';\r\nimport { OnDestroy } from 'ngx-take-until-destroy';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'kosmos-master-data',\r\n    templateUrl: './master-data.component.html',\r\n    styleUrls: ['./master-data.component.scss']\r\n})\r\nexport class MasterDataComponent implements OnInit, OnDestroy {\r\n    @ViewChild(MessageBoxComponent)\r\n    private _messageBox: MessageBoxComponent;\r\n    private _intervalId: NodeJS.Timer;\r\n\r\n    fileToUpload: File = null;\r\n    isImporting: boolean;\r\n\r\n    constructor(private _masterDataImportService: MasterDataImportService) {}\r\n\r\n    ngOnInit() {\r\n        this.isImporting = false;\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this._intervalId) {\r\n            clearInterval(this._intervalId);\r\n        }\r\n    }\r\n\r\n    private uploadScopeItems(): void {\r\n        this.subscribeAndHandleResult(this._masterDataImportService.postFile(this.fileToUpload));\r\n    }\r\n\r\n    private checkImportResult(): void {\r\n        this._masterDataImportService.checkResult().subscribe(result => {\r\n            if (result == undefined || result == null || result.state == ProcessStateEnum.STARTED) {\r\n                return;\r\n            }\r\n\r\n            this.isImporting = false;\r\n            if (this._intervalId) {\r\n                clearInterval(this._intervalId);\r\n            }\r\n\r\n            if (result.state == ProcessStateEnum.FINISHED) {\r\n                this.showMessageBox('Success', 'The data was imported successfully.');\r\n            } else if (result.state == ProcessStateEnum.FINISHED_WITH_ERRRORS) {\r\n                this.showMessageBox('Error', 'The import file violates the following conventions: ' + result.message);\r\n            }\r\n        });\r\n    }\r\n\r\n    handleFileInput(files: FileList) {\r\n        this.fileToUpload = files.item(0);\r\n        this.uploadScopeItems();\r\n    }\r\n\r\n    handleIndustries(files: FileList) {\r\n        this.subscribeAndHandleResult(this._masterDataImportService.postIndustries(files.item(0)));\r\n    }\r\n\r\n    showMessageBox(title: string, message: string) {\r\n        this._messageBox.title = title;\r\n        this._messageBox.message = message;\r\n        this._messageBox.show();\r\n    }\r\n\r\n    private subscribeAndHandleResult(observable: Observable<Object>): void {\r\n        observable.subscribe(\r\n            data => {\r\n                this.isImporting = true;\r\n                this._intervalId = setInterval(() => {\r\n                    this.checkImportResult();\r\n                }, 10000);\r\n            },\r\n            error => {\r\n                this.showMessageBox('Error', 'The import function is currently not available.');\r\n            }\r\n        );\r\n    }\r\n}\r\n","module.exports = \"<dx-popup title=\\\"ADD USER\\\" height=\\\"560px\\\" width=\\\"680px\\\" resizeEnabled=\\\"true\\\" (onHidden)=\\\"onHidden()\\\">\\r\\n    <div *dxTemplate=\\\"let data of 'content'\\\" class=\\\"popup\\\">\\r\\n        <dx-validation-group>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <div class=\\\"form-item\\\">\\r\\n                    <label>KPMG GPID</label>\\r\\n                    <dx-text-box class=\\\"title\\\" [(value)]=\\\"user.gpid\\\" tabIndex=\\\"0\\\">\\r\\n                        <dx-validator>\\r\\n                            <dxi-validation-rule type=\\\"required\\\"></dxi-validation-rule>\\r\\n                        </dx-validator>\\r\\n                    </dx-text-box>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div style=\\\"clear: both;\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <div class=\\\"form-item\\\">\\r\\n                        <label>Salutation</label>\\r\\n                        <dx-text-box class=\\\"title\\\" [(value)]=\\\"user.salutation\\\" tabIndex=\\\"10\\\">\\r\\n                        </dx-text-box>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div style=\\\"clear: both;\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <div class=\\\"form-item\\\">\\r\\n                        <label>First Name</label>\\r\\n                        <dx-text-box class=\\\"title\\\" [(value)]=\\\"user.firstName\\\" tabIndex=\\\"20\\\">\\r\\n                            <dx-validator>\\r\\n                                <dxi-validation-rule type=\\\"required\\\"></dxi-validation-rule>\\r\\n                            </dx-validator>\\r\\n                        </dx-text-box>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-item\\\">\\r\\n                        <label>Email</label>\\r\\n                        <dx-text-box class=\\\"email\\\" [(value)]=\\\"user.email\\\" tabIndex=\\\"40\\\">\\r\\n                            <dx-validator>\\r\\n                                <dxi-validation-rule type=\\\"required\\\"></dxi-validation-rule>\\r\\n                                <dxi-validation-rule type=\\\"email\\\"></dxi-validation-rule>\\r\\n                            </dx-validator>\\r\\n                        </dx-text-box>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <div class=\\\"form-item\\\">\\r\\n                        <label>Last Name</label>\\r\\n                        <dx-text-box class=\\\"title\\\" [(value)]=\\\"user.lastName\\\" tabIndex=\\\"30\\\">\\r\\n                            <dx-validator>\\r\\n                                <dxi-validation-rule type=\\\"required\\\"></dxi-validation-rule>\\r\\n                            </dx-validator>\\r\\n                        </dx-text-box>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div style=\\\"clear: both;\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <div class=\\\"form-item\\\">\\r\\n                        <label>Is Active</label>\\r\\n                        <dx-check-box [(value)]=\\\"user.isActive\\\" tabIndex=\\\"50\\\"></dx-check-box>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <div class=\\\"form-item\\\">\\r\\n                        <label>Is Admin</label>\\r\\n                        <dx-check-box [(value)]=\\\"user.isAdmin\\\" tabIndex=\\\"60\\\"></dx-check-box>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </dx-validation-group>\\r\\n    </div>\\r\\n    <dxi-toolbar-item widget=\\\"dxButton\\\" location=\\\"after\\\" toolbar=\\\"bottom\\\" tabIndex=\\\"70\\\" [options]=\\\"{\\r\\n        text: 'Done',\\r\\n        onClick: validateAndSubmitForm\\r\\n   }\\\">\\r\\n    </dxi-toolbar-item>\\r\\n</dx-popup>\"","module.exports = \".form-group {\\n  display: block;\\n  flex-direction: row;\\n  flex-wrap: nowrap;\\n  float: left;\\n  margin-left: 0; }\\n  .form-group .form-item {\\n    flex: 0 1 auto;\\n    max-width: none;\\n    padding-right: 20px;\\n    width: 319px; }\\n\"","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { User } from '@core/models/user';\r\nimport { ValidatedPopupComponent } from '../../../shared';\r\n\r\n@Component({\r\n    selector: 'kosmos-add-user',\r\n    templateUrl: './add-user.component.html',\r\n    styleUrls: ['./add-user.component.scss']\r\n})\r\nexport class AddUserComponent extends ValidatedPopupComponent implements OnInit {\r\n    user: User;\r\n\r\n    @Output()\r\n    done: EventEmitter<User> = new EventEmitter();\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    ngOnInit() {\r\n        super.ngOnInit();\r\n        this.setNewUser();\r\n    }\r\n\r\n    submitForm(): void {\r\n        this.done.emit(this.user);\r\n    }\r\n\r\n    onHidden() {\r\n        this.setNewUser();\r\n    }\r\n\r\n    private setNewUser() {\r\n        this.user = new User();\r\n        this.user.isActive = true;\r\n        this.user.isAdmin = false;\r\n    }\r\n}\r\n","module.exports = \"<dx-popup title=\\\"EDIT USER\\\" height=\\\"560px\\\" width=\\\"680px\\\" resizeEnabled=\\\"true\\\">\\r\\n    <div *dxTemplate=\\\"let data of 'content'\\\" class=\\\"popup\\\">\\r\\n        <dx-validation-group>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <div class=\\\"form-item\\\">\\r\\n                    <label>KPMG GPID</label>\\r\\n                    <dx-text-box class=\\\"title\\\" [(value)]=\\\"user.gpid\\\"></dx-text-box>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div style=\\\"clear: both;\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <div class=\\\"form-item\\\">\\r\\n                        <label>Salutation</label>\\r\\n                        <dx-text-box class=\\\"title\\\" [(value)]=\\\"user.salutation\\\">\\r\\n                        </dx-text-box>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div style=\\\"clear: both;\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <div class=\\\"form-item\\\">\\r\\n                        <label>First Name</label>\\r\\n                        <dx-text-box class=\\\"title\\\" [(value)]=\\\"user.firstName\\\">\\r\\n                            <dx-validator>\\r\\n                                <dxi-validation-rule type=\\\"required\\\"></dxi-validation-rule>\\r\\n                            </dx-validator>\\r\\n                        </dx-text-box>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-item\\\" width=\\\"440px\\\">\\r\\n                        <label>Email</label>\\r\\n                        <dx-text-box class=\\\"email\\\" [(value)]=\\\"user.email\\\">\\r\\n                            <dx-validator>\\r\\n                                <dxi-validation-rule type=\\\"required\\\"></dxi-validation-rule>\\r\\n                                <dxi-validation-rule type=\\\"email\\\"></dxi-validation-rule>\\r\\n                            </dx-validator>\\r\\n                        </dx-text-box>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <div class=\\\"form-item\\\">\\r\\n                        <label>Last Name</label>\\r\\n                        <dx-text-box class=\\\"title\\\" [(value)]=\\\"user.lastName\\\">\\r\\n                            <dx-validator>\\r\\n                                <dxi-validation-rule type=\\\"required\\\"></dxi-validation-rule>\\r\\n                            </dx-validator>\\r\\n                        </dx-text-box>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div style=\\\"clear: both;\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <div class=\\\"form-item\\\">\\r\\n                        <label>Is Active</label>\\r\\n                        <dx-check-box [(value)]=\\\"user.isActive\\\"></dx-check-box>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <div class=\\\"form-item\\\">\\r\\n                        <label>Is Admin</label>\\r\\n                        <dx-check-box [(value)]=\\\"user.isAdmin\\\"></dx-check-box>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </dx-validation-group>\\r\\n    </div>\\r\\n    <dxi-toolbar-item widget=\\\"dxButton\\\" location=\\\"after\\\" toolbar=\\\"bottom\\\" [options]=\\\"{\\r\\n        text: 'Done',\\r\\n        onClick: validateAndSubmitForm\\r\\n   }\\\">\\r\\n    </dxi-toolbar-item>\\r\\n</dx-popup>\"","module.exports = \".form-group {\\n  display: block;\\n  flex-direction: row;\\n  flex-wrap: nowrap;\\n  float: left;\\n  margin-left: 0; }\\n  .form-group .form-item {\\n    flex: 0 1 auto;\\n    max-width: none;\\n    padding-right: 20px;\\n    width: 319px; }\\n\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { User } from '@core/models/user';\r\nimport { ValidatedPopupComponent } from '../../../shared';\r\n\r\n@Component({\r\n    selector: 'kosmos-edit-user',\r\n    templateUrl: './edit-user.component.html',\r\n    styleUrls: ['./edit-user.component.scss']\r\n})\r\nexport class EditUserComponent extends ValidatedPopupComponent implements OnInit {\r\n    user: User;\r\n\r\n    @Input()\r\n    set selectedUser(value: User) {\r\n        this.user = value;\r\n    }\r\n\r\n    @Output()\r\n    done: EventEmitter<User> = new EventEmitter();\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    ngOnInit() {\r\n        super.ngOnInit();\r\n    }\r\n\r\n    submitForm(): void {\r\n        this.done.emit(this.user);\r\n    }\r\n}\r\n","module.exports = \"<!-- <div class=\\\"container\\\"> -->\\r\\n<!-- Attension! Using the div-container with classes content and content-inner creates problems in IE. But they are necessary for scrolling.-->\\r\\n<!-- <div class=\\\"content\\\"> -->\\r\\n<!--  <div class=\\\"content-inner\\\"> -->\\r\\n<h1 class=\\\"headline\\\">User Management</h1>\\r\\n<div class=\\\"buttons\\\">\\r\\n    <dx-button text=\\\"Add new user\\\" [visible]=\\\"currentUser?.isAdmin\\\" (onClick)=\\\"addUser()\\\" style=\\\"margin-left: 40px; margin-bottom: 20px; width: 250px;\\\"></dx-button>\\r\\n    <div class=\\\"button dx-button\\\" *ngIf=\\\"currentUser?.isAdmin\\\" role=\\\"button\\\">\\r\\n        <span>Import users</span>\\r\\n        <input type=\\\"file\\\" id=\\\"userFile\\\" (change)=\\\"importUsers($event.target.files)\\\" />\\r\\n    </div>\\r\\n    <div class=\\\"loader\\\" *ngIf=\\\"isImporting\\\">\\r\\n        <kosmos-loading-cube></kosmos-loading-cube>\\r\\n    </div>\\r\\n</div>\\r\\n<dx-data-grid id=\\\"gridContainer\\\" class=\\\"grid-component\\\" [dataSource]=\\\"users\\\" keyExpr=\\\"gpid\\\" [hoverStateEnabled]=\\\"true\\\"\\r\\n    [showBorders]=\\\"true\\\">\\r\\n\\r\\n    <dxo-header-filter [visible]=\\\"showHeaderFilter\\\"></dxo-header-filter>\\r\\n    <dxo-search-panel [visible]=\\\"true\\\" [width]=\\\"240\\\" placeholder=\\\"Search...\\\"></dxo-search-panel>\\r\\n    <dxo-sorting mode=\\\"multiple\\\"></dxo-sorting>\\r\\n    <dxo-paging [pageSize]=\\\"10\\\"></dxo-paging>\\r\\n    <dxo-selection mode=\\\"single\\\"></dxo-selection>\\r\\n    <!-- dxo-pager can't be used because right now the page is not scrollable. -->\\r\\n    <dxo-pager [showPageSizeSelector]=\\\"false\\\" [allowedPageSizes]=\\\"[5, 10, 20]\\\" [showInfo]=\\\"true\\\"></dxo-pager>\\r\\n    <dxi-column dataField=\\\"salutation\\\">\\r\\n        <dxi-validation-rule type=\\\"required\\\"></dxi-validation-rule>\\r\\n    </dxi-column>\\r\\n    <dxi-column dataField=\\\"lastName\\\" sortOrder=\\\"asc\\\" sortIndex=\\\"0\\\">\\r\\n        <dxi-validation-rule type=\\\"required\\\"></dxi-validation-rule>\\r\\n    </dxi-column>\\r\\n    <dxi-column dataField=\\\"firstName\\\" sortOrder=\\\"asc\\\" sortIndex=\\\"1\\\">\\r\\n        <dxi-validation-rule type=\\\"required\\\"></dxi-validation-rule>\\r\\n    </dxi-column>\\r\\n    <dxi-column dataField=\\\"email\\\">\\r\\n        <dxi-validation-rule type=\\\"required\\\"></dxi-validation-rule>\\r\\n        <dxi-validation-rule type=\\\"email\\\"></dxi-validation-rule>\\r\\n    </dxi-column>\\r\\n    <dxi-column [visible]=\\\"currentUser?.isAdmin\\\" dataField=\\\"isActive\\\"></dxi-column>\\r\\n    <dxi-column [visible]=\\\"currentUser?.isAdmin\\\" dataField=\\\"isAdmin\\\"></dxi-column>\\r\\n    <dxi-column dataField=\\\"isAllowCreateProject\\\" [visible]=\\\"false\\\"></dxi-column>\\r\\n    <dxi-column [visible]=\\\"currentUser?.isAdmin\\\" name=\\\"command-editing\\\" [allowFiltering]=\\\"false\\\" [allowSorting]=\\\"false\\\"\\r\\n        cellTemplate=\\\"cellTemplate\\\">\\r\\n        <div *dxTemplate=\\\"let data of 'cellTemplate'\\\" style=\\\"text-align: center;\\\">\\r\\n            <a class=\\\"dx-link dx-link-edit\\\" (click)=\\\"editUser(data, $event)\\\">Edit</a>\\r\\n            <!-- <a class=\\\"dx-link dx-link-edit\\\" (click)=\\\"deleteUser(data, $event)\\\">Delete</a> -->\\r\\n        </div>\\r\\n    </dxi-column>\\r\\n</dx-data-grid>\\r\\n\\r\\n<kosmos-add-user (done)=\\\"addDoneHandler($event)\\\"></kosmos-add-user>\\r\\n<kosmos-edit-user [selectedUser]=\\\"editSelectedUser\\\" (done)=\\\"editDoneHandler($event)\\\"></kosmos-edit-user>\\r\\n<kosmos-message-box showDoneButton=\\\"true\\\" showCloseButton=\\\"true\\\"></kosmos-message-box>\\r\\n<!-- </div> -->\\r\\n<!-- </div> -->\\r\\n<!-- </div> -->\\r\\n\\r\\n<dx-toast message=\\\"The user with given KPMG GPID already exists!\\\" [(visible)]=\\\"showExistsMessage\\\" type=\\\"Error\\\"\\r\\n    i18n-message=\\\"toastMessage|toastMessage@@userlist:editError:toast-message\\\"></dx-toast>\\r\\n<dx-toast message=\\\"User successfully added\\\" [(visible)]=\\\"showSuccessMessage\\\" type=\\\"Success\\\" i18n-message=\\\"toastMessage|toastMessage@@userlist:editSuccess:toast-message\\\"></dx-toast>\"","module.exports = \".button {\\n  margin-left: 20px;\\n  margin-bottom: 20px;\\n  padding: 7px 18px 8px;\\n  position: relative;\\n  width: 250px; }\\n  .button input#userFile {\\n    position: absolute;\\n    top: 0;\\n    right: 0;\\n    margin: 0;\\n    padding: 0;\\n    opacity: 0;\\n    font-size: 20px;\\n    cursor: pointer;\\n    filter: alpha(opacity=0); }\\n  .buttons {\\n  display: flex; }\\n  .headline {\\n  margin: 40px; }\\n  .grid-component {\\n  padding: 15px;\\n  background-color: white; }\\n  .loader {\\n  height: 32px;\\n  width: 32px;\\n  margin: 11px; }\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ProcessStateEnum } from '@core/enum/process-state-enum';\r\nimport { StaffMember } from '@core/models/staffMember';\r\nimport { User } from '@core/models/user';\r\nimport { MasterDataImportService } from '@core/services';\r\nimport { UserService } from '@core/services/user/user.service';\r\nimport { MessageBoxComponent } from '@shared/message-box/message-box.component';\r\nimport { DxDataGridComponent } from 'devextreme-angular';\r\nimport { LocalStorageService } from 'ngx-store';\r\nimport { Observable } from 'rxjs';\r\nimport { AddUserComponent } from './add-user/add-user.component';\r\nimport { EditUserComponent } from './edit-user/edit-user.component';\r\n\r\n@Component({\r\n    selector: 'kosmos-userlist',\r\n    templateUrl: './userlist.component.html',\r\n    styleUrls: ['./userlist.component.scss']\r\n})\r\nexport class UserlistComponent implements OnInit {\r\n    @ViewChild(EditUserComponent)\r\n    editUserPopup: EditUserComponent;\r\n    @ViewChild(AddUserComponent)\r\n    addUserPopup: AddUserComponent;\r\n    @ViewChild(DxDataGridComponent)\r\n    dataGrid: DxDataGridComponent;\r\n    users: User[];\r\n    currentUser: User;\r\n    showHeaderFilter: boolean;\r\n    isEditing: boolean = false;\r\n    selectBoxData: StaffMember[];\r\n    dataGridInstance: any;\r\n    requestResult: boolean;\r\n    subscription: any;\r\n    showExistsMessage: boolean = false;\r\n    showSuccessMessage: boolean = false;\r\n    oldUser: User = null;\r\n    editSelectedUser: User; // choosen user to edit\r\n\r\n    @ViewChild(MessageBoxComponent)\r\n    private _messageBox: MessageBoxComponent;\r\n    private _intervalId: NodeJS.Timer;\r\n    isImporting: boolean;\r\n\r\n    constructor(\r\n        private _userService: UserService,\r\n        private localStorageService: LocalStorageService,\r\n        private _masterDataImportService: MasterDataImportService\r\n    ) {\r\n        this.currentUser = this.localStorageService.get('currentUser');\r\n    }\r\n\r\n    ngOnInit() {\r\n        this._userService.getUsers().subscribe(\r\n            users => {\r\n                this.users = users;\r\n                this.showHeaderFilter = true;\r\n            },\r\n            error => {}\r\n        );\r\n        this.addUserPopup.closeEvent.subscribe(() => this.addUserPopup.hide());\r\n        this.editUserPopup.closeEvent.subscribe(() => this.editUserPopup.hide());\r\n        this.editSelectedUser = new User();\r\n    }\r\n\r\n    /**\r\n     * open a popup to add a user\r\n     */\r\n    addUser() {\r\n        this.addUserPopup.show();\r\n    }\r\n\r\n    /**\r\n     * open popup to edit a user\r\n     * @param event\r\n     */\r\n    editUser(event: any) {\r\n        this.editUserPopup.show();\r\n        this.editSelectedUser = Object.create(event.data);\r\n    }\r\n\r\n    /**\r\n     * Add a user on done-click\r\n     * @param user\r\n     */\r\n    addDoneHandler(user: User) {\r\n        this._userService.postUser(user).subscribe(\r\n            () => {\r\n                this._userService.getUsers().subscribe(\r\n                    users => {\r\n                        this.users = users;\r\n                        this.showHeaderFilter = true;\r\n                    },\r\n                    error => {}\r\n                );\r\n                this.dataGrid.instance.refresh();\r\n                this.showSuccessMessage = true;\r\n            },\r\n            () => {\r\n                this.showExistsMessage = true;\r\n            }\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Edit a user on done-click\r\n     * @param user\r\n     */\r\n    editDoneHandler(user: User) {\r\n        this.editSelectedUser = user;\r\n        this._userService.editUser(this.editSelectedUser).subscribe(\r\n            () => {\r\n                this.reloadUsers();\r\n            },\r\n            () => {\r\n                this.showExistsMessage = true;\r\n            }\r\n        );\r\n    }\r\n\r\n    importUsers(files: FileList) {\r\n        if (files.length > 0) {\r\n            this.subscribeAndHandleResult(this._masterDataImportService.postUsers(files.item(0)));\r\n        }\r\n    }\r\n\r\n    processResult(result: boolean) {\r\n        if (!result) {\r\n            this.showExistsMessage = true;\r\n            if (this.oldUser != null) {\r\n                const userindex = this.users.findIndex(x => x.gpid == this.oldUser.gpid);\r\n                this.users[userindex] = this.oldUser;\r\n                this.oldUser = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    private checkImportResult(): void {\r\n        this._masterDataImportService.checkResult().subscribe(result => {\r\n            if (result == undefined || result == null || result.state == ProcessStateEnum.STARTED) {\r\n                return;\r\n            }\r\n\r\n            this.isImporting = false;\r\n            if (this._intervalId) {\r\n                clearInterval(this._intervalId);\r\n            }\r\n\r\n            if (result.state == ProcessStateEnum.FINISHED) {\r\n                this.showMessageBox('Success', 'The data was imported successfully.');\r\n            } else if (result.state == ProcessStateEnum.FINISHED_WITH_ERRRORS) {\r\n                this.showMessageBox('Error', 'The import file violates the following conventions: ' + result.message);\r\n            }\r\n            this.resetUserFile();\r\n            this.reloadUsers();\r\n        });\r\n    }\r\n\r\n    reloadUsers() {\r\n        this._userService.getUsers().subscribe(\r\n            users => {\r\n                this.users = users;\r\n                this.showHeaderFilter = true;\r\n                this.dataGrid.instance.refresh();\r\n            },\r\n            error => {}\r\n        );\r\n    }\r\n\r\n    resetUserFile() {\r\n        (document.getElementById('userFile') as HTMLInputElement).value = '';\r\n    }\r\n\r\n    showMessageBox(title: string, message: string) {\r\n        this._messageBox.title = title;\r\n        this._messageBox.message = message;\r\n        this._messageBox.show();\r\n    }\r\n\r\n    private subscribeAndHandleResult(observable: Observable<Object>): void {\r\n        observable.subscribe(\r\n            data => {\r\n                this.isImporting = true;\r\n                this._intervalId = setInterval(() => {\r\n                    this.checkImportResult();\r\n                }, 10000);\r\n            },\r\n            error => {\r\n                this.showMessageBox('Error', 'The import function is currently not available.');\r\n                this.resetUserFile();\r\n            }\r\n        );\r\n    }\r\n}\r\n"],"sourceRoot":""}