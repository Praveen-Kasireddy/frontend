{"version":3,"sources":["multi-hash-map.js"],"names":["MultiHashMap","levels","map","keys","value","currentObject","forEach","key","index","length","hasOwnProperty","console","log","getUniqueGroupsHelper","level","groups","i","subMap","concat"],"mappings":";;;;;;IAAMA,Y;AACF,0BAAYC,MAAZ,EAAoB;AAAA;;AAChB,aAAKA,MAAL,GAAcA,MAAd;AACA,aAAKC,GAAL,GAAW,EAAX;AACH;;;;4BAEGC,I,EAAMC,K,EAAO;AACb,gBAAIC,gBAAgB,KAAKH,GAAzB;AACAC,iBAAKG,OAAL,CAAa,UAACC,GAAD,EAAMC,KAAN,EAAgB;AACzB,oBAAIA,QAAQL,KAAKM,MAAL,GAAc,CAA1B,EAA6B;AACzB,wBAAI,CAACJ,cAAcK,cAAd,CAA6BH,GAA7B,CAAL,EAAwC;AACpCF,sCAAcE,GAAd,IAAqB,EAArB;AACH;;AAEDF,oCAAgBA,cAAcE,GAAd,CAAhB;AACH,iBAND,MAOK;AACDF,kCAAcE,GAAd,IAAqBH,KAArB;AACH;AACJ,aAXD;AAYH;;;8BAEK;AACFO,oBAAQC,GAAR,CAAY,KAAKV,GAAjB;AACH;;;0CAEiB;AACd,mBAAO,KAAKW,qBAAL,CAA2B,KAAKX,GAAhC,EAAqC,CAArC,CAAP;AACH;;;8CAEqBA,G,EAAKY,K,EAAO;AAC9B,gBAAIA,UAAU,KAAKb,MAAnB,EAA2B;AACvB,oBAAIc,SAAS,EAAb;;AAEA,qBAAK,IAAIC,CAAT,IAAcd,GAAd,EAAmB;AACf,wBAAIe,SAASf,IAAIc,CAAJ,CAAb;;AAEAD,6BAASA,OAAOG,MAAP,CAAc,KAAKL,qBAAL,CAA2BI,MAA3B,EAAmCH,QAAQ,CAA3C,CAAd,CAAT;AACH;;AAED,uBAAOC,MAAP;AACH;;AAED,mBAAO,CAACb,GAAD,CAAP;AACH","file":"multi-hash-map.js","sourcesContent":["class MultiHashMap {\n    constructor(levels) {\n        this.levels = levels;\n        this.map = {};\n    }\n\n    set(keys, value) {\n        let currentObject = this.map;\n        keys.forEach((key, index) => {\n            if (index < keys.length - 1) {\n                if (!currentObject.hasOwnProperty(key)) {\n                    currentObject[key] = {};\n                }\n\n                currentObject = currentObject[key];\n            }\n            else {\n                currentObject[key] = value;\n            }\n        });\n    }\n\n    log() {\n        console.log(this.map);\n    }\n\n    getUniqueGroups() {\n        return this.getUniqueGroupsHelper(this.map, 1);\n    }\n\n    getUniqueGroupsHelper(map, level) {\n        if (level !== this.levels) {\n            let groups = [];\n\n            for (let i in map) {\n                let subMap = map[i];\n\n                groups = groups.concat(this.getUniqueGroupsHelper(subMap, level + 1));\n            }\n\n            return groups;\n        }\n\n        return [map];\n    }\n}"]}